//
// Generated file, do not edit! Created by opp_msgc 4.2 from basicSMR/messages/HBTimeout.msg.
//

#ifndef _HBTIMEOUT_M_H_
#define _HBTIMEOUT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>basicSMR/messages/HBTimeout.msg</tt> by opp_msgc.
 * <pre>
 * packet HBTimeout {
 *     string hostName;
 *     simtime_t timeout;
 * }
 * </pre>
 */
class HBTimeout : public ::cPacket
{
  protected:
    opp_string hostName_var;
    simtime_t timeout_var;

  private:
    void copy(const HBTimeout& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const HBTimeout&);

  public:
    HBTimeout(const char *name=NULL, int kind=0);
    HBTimeout(const HBTimeout& other);
    virtual ~HBTimeout();
    HBTimeout& operator=(const HBTimeout& other);
    virtual HBTimeout *dup() const {return new HBTimeout(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getHostName() const;
    virtual void setHostName(const char * hostName);
    virtual simtime_t getTimeout() const;
    virtual void setTimeout(simtime_t timeout);
};

inline void doPacking(cCommBuffer *b, HBTimeout& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, HBTimeout& obj) {obj.parsimUnpack(b);}


#endif // _HBTIMEOUT_M_H_

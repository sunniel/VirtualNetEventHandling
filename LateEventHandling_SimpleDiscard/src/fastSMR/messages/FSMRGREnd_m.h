//
// Generated file, do not edit! Created by opp_msgc 4.2 from fastSMR/messages/FSMRGREnd.msg.
//

#ifndef _FSMRGREND_M_H_
#define _FSMRGREND_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "Constants.h"
// }}



/**
 * Class generated from <tt>fastSMR/messages/FSMRGREnd.msg</tt> by opp_msgc.
 * <pre>
 * packet FSMRGREnd {
 * 	string displayString = DISPLAY_STR_MSG_GROUP_GR;
 *     
 *     string senderName;
 *     int epoch;
 *     int groupId;
 *     string groupMembers;
 *     string Qd;
 *     string Qp;
 *     
 *     string senders;
 *     string sors;
 *     int escId;
 *     long esc;
 * }
 * </pre>
 */
class FSMRGREnd : public ::cPacket
{
  protected:
    opp_string displayString_var;
    opp_string senderName_var;
    int epoch_var;
    int groupId_var;
    opp_string groupMembers_var;
    opp_string Qd_var;
    opp_string Qp_var;
    opp_string senders_var;
    opp_string sors_var;
    int escId_var;
    long esc_var;

  private:
    void copy(const FSMRGREnd& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const FSMRGREnd&);

  public:
    FSMRGREnd(const char *name=NULL, int kind=0);
    FSMRGREnd(const FSMRGREnd& other);
    virtual ~FSMRGREnd();
    FSMRGREnd& operator=(const FSMRGREnd& other);
    virtual FSMRGREnd *dup() const {return new FSMRGREnd(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getDisplayString() const;
    virtual void setDisplayString(const char * displayString);
    virtual const char * getSenderName() const;
    virtual void setSenderName(const char * senderName);
    virtual int getEpoch() const;
    virtual void setEpoch(int epoch);
    virtual int getGroupId() const;
    virtual void setGroupId(int groupId);
    virtual const char * getGroupMembers() const;
    virtual void setGroupMembers(const char * groupMembers);
    virtual const char * getQd() const;
    virtual void setQd(const char * Qd);
    virtual const char * getQp() const;
    virtual void setQp(const char * Qp);
    virtual const char * getSenders() const;
    virtual void setSenders(const char * senders);
    virtual const char * getSors() const;
    virtual void setSors(const char * sors);
    virtual int getEscId() const;
    virtual void setEscId(int escId);
    virtual long getEsc() const;
    virtual void setEsc(long esc);
};

inline void doPacking(cCommBuffer *b, FSMRGREnd& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, FSMRGREnd& obj) {obj.parsimUnpack(b);}


#endif // _FSMRGREND_M_H_
